{"version":3,"file":"index-Bb0sHIBc.js","sources":["../../../src/js/portfolio.js","../../../src/js/scroll.js","../../../src/index.html?html-proxy&index=0.js"],"sourcesContent":["/**\n * Portfolio Data Manager\n * Handles dynamic loading and display of portfolio data from JSON\n * Manages wallet switching and data updates across the portfolio section\n */\n\nexport class PortfolioManager {\n    constructor() {\n        this.data = null; // Portfolio data from JSON\n        this.activeWalletId = null; // Currently selected wallet ID\n        this.init();\n    }\n\n    /**\n     * Initialize the portfolio manager\n     * Loads data, renders buttons, and sets active wallet\n     */\n    async init() {\n        try {\n            await this.loadData();\n            this.renderWalletButtons();\n            this.setActiveWallet(this.data.activeWalletId || this.data.wallets[0].id);\n        } catch (error) {\n            console.error('Error loading portfolio data:', error);\n        }\n    }\n\n    /**\n     * Load portfolio data from JSON file with retry logic\n     * @param {number} retries - Number of retry attempts\n     * @returns {Promise<void>}\n     * @throws {Error} If HTTP request fails after all retries\n     */\n    async loadData(retries = 3) {\n        for (let i = 0; i < retries; i++) {\n            try {\n                const response = await fetch('./assets/data/portfolio-data.json');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                this.data = await response.json();\n                return;\n            } catch (error) {\n                if (i === retries - 1) throw error;\n                // Exponential backoff: 1s, 2s, 3s\n                await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n            }\n        }\n    }\n\n    /**\n     * Render wallet selection buttons dynamically using DocumentFragment\n     * Creates buttons for each wallet in the data with performance optimization\n     */\n    renderWalletButtons() {\n        const walletButtonsContainer = document.querySelector('.wallet-selection');\n        if (!walletButtonsContainer) {\n            console.error('Wallet selection container not found');\n            return;\n        }\n        \n        // Clear existing buttons\n        walletButtonsContainer.innerHTML = '';\n\n        // Use DocumentFragment for better performance\n        const fragment = document.createDocumentFragment();\n        \n        // Create button for each wallet\n        this.data.wallets.forEach(wallet => {\n            const button = this.createWalletButton(wallet);\n            fragment.appendChild(button);\n        });\n        \n        // Append all buttons at once\n        walletButtonsContainer.appendChild(fragment);\n    }\n\n    /**\n     * Create individual wallet button element\n     * @param {Object} wallet - Wallet data object\n     * @returns {HTMLButtonElement} Created button element\n     */\n    createWalletButton(wallet) {\n        const button = document.createElement('button');\n        button.className = 'btn btn-outline-dark rounded-pill px-4';\n        button.textContent = wallet.name;\n        button.setAttribute('data-wallet-id', wallet.id);\n        button.setAttribute('aria-pressed', 'false');\n        button.setAttribute('aria-label', `Выбрать ${wallet.name}`);\n        \n        // Add click event listener\n        button.addEventListener('click', () => this.setActiveWallet(wallet.id));\n        \n        return button;\n    }\n\n    /**\n     * Set active wallet and update UI\n     * @param {number} walletId - ID of the wallet to activate\n     */\n    setActiveWallet(walletId) {\n        const wallet = this.data.wallets.find(w => w.id === walletId);\n        if (!wallet) return;\n\n        this.activeWalletId = walletId;\n        this.updateWalletButtons(walletId);\n        this.updatePortfolioData(wallet);\n    }\n\n    /**\n     * Update wallet button states (active/inactive)\n     * @param {number} activeId - ID of the currently active wallet\n     */\n    updateWalletButtons(activeId) {\n        const buttons = document.querySelectorAll('.wallet-selection button');\n        buttons.forEach(button => {\n            const walletId = parseInt(button.getAttribute('data-wallet-id'));\n            const isActive = walletId === activeId;\n            \n            // Update button styles based on active state\n            button.className = isActive \n                ? 'btn btn-dark rounded-pill px-4'\n                : 'btn btn-outline-dark rounded-pill px-4';\n            button.setAttribute('aria-pressed', isActive.toString());\n        });\n    }\n\n    /**\n     * Update all portfolio data for the selected wallet\n     * @param {Object} wallet - Wallet data object\n     */\n    updatePortfolioData(wallet) {\n        // Update capital value in 3 places: header, chart center, portfolio card\n        this.updateElement('.portfolio-value', wallet.capital);\n        this.updateElement('.chart-value', wallet.capital);\n        this.updateElement('[data-stat=\"portfolio\"] .stat-value', wallet.capital);\n        \n        // Update statistics\n        this.updateElement('[data-stat=\"winrate\"] .stat-value', wallet.winRate);\n        this.updateElement('[data-stat=\"annual-return\"] .stat-value', wallet.annualReturn);\n        \n        // Update chart subtitle with yearly return percentage\n        this.updateChartSubtitle(wallet.yearlyReturn);\n        \n        // Update assets list and circular chart\n        this.updateAssetsList(wallet.assets);\n        this.updateCircularChart(wallet.assets);\n        \n        // Update chart images\n        this.updateChartImages(wallet);\n    }\n\n    /**\n     * Update element text content by selector\n     * @param {string} selector - CSS selector for the element\n     * @param {string} value - New text content\n     */\n    updateElement(selector, value) {\n        const element = document.querySelector(selector);\n        if (element) {\n            element.textContent = value;\n        }\n    }\n\n    /**\n     * Update chart subtitle with yearly return percentage\n     * @param {string} yearlyReturn - Yearly return percentage\n     */\n    updateChartSubtitle(yearlyReturn) {\n        const chartSubtitle = document.querySelector('.chart-subtitle');\n        if (chartSubtitle) {\n            chartSubtitle.innerHTML = `^${yearlyReturn} доходности<br>за последний год`;\n        }\n    }\n\n    /**\n     * Update assets list with new asset data\n     * @param {Array} assets - Array of asset objects\n     */\n    updateAssetsList(assets) {\n        const assetsContainer = document.querySelector('.assets-list');\n        if (!assetsContainer) return;\n\n        // Clear existing assets\n        const existingAssets = assetsContainer.querySelectorAll('.asset-item');\n        existingAssets.forEach(asset => asset.remove());\n\n        // Create new asset items\n        assets.forEach(asset => {\n            const assetItem = document.createElement('div');\n            assetItem.className = 'asset-item d-flex align-items-center justify-content-between mb-2 py-2';\n            \n            const assetIcon = this.getAssetIconClass(asset.name);\n            const iconElement = this.createAssetIcon(asset);\n            \n            // Create asset item HTML with icon and percentage\n            assetItem.innerHTML = `\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"asset-icon ${assetIcon} rounded-circle d-flex align-items-center justify-content-center me-2\">\n                        ${iconElement}\n                    </div>\n                    <span class=\"text-dark\">${asset.name} - ${asset.percentage}%</span>\n                </div>\n            `;\n            \n            assetsContainer.appendChild(assetItem);\n        });\n    }\n\n    /**\n     * Create asset icon element (image or fallback letter)\n     * @param {Object} asset - Asset object with name and icon\n     * @returns {string} HTML string for icon element\n     */\n    createAssetIcon(asset) {\n        // Try to load icon image, fallback to letter if not found\n        const iconPath = `./assets/icons/tokenico/${asset.icon}.png`;\n        \n        // Return image element with error handling\n        return `<img src=\"${iconPath}\" alt=\"${asset.name}\" class=\"asset-icon-img\" style=\"width: 16px; height: 16px; object-fit: contain;\" onerror=\"this.style.display='none'; this.nextElementSibling.style.display='inline';\">\n                <span class=\"text-white small fw-bold\" style=\"display: none;\">${asset.name.charAt(0)}</span>`;\n    }\n\n    /**\n     * Get Bootstrap color class for asset icon\n     * @param {string} assetName - Name of the asset\n     * @returns {string} Bootstrap color class\n     */\n    getAssetIconClass(assetName) {\n        const iconClasses = {\n            'USDT': 'bg-success',    // Green for USDT\n            'Bitcoin': 'bg-warning', // Orange for Bitcoin\n            'ETH': 'bg-primary',     // Blue for Ethereum\n            'AVAX': 'bg-danger'      // Red for Avalanche\n        };\n        return iconClasses[assetName] || 'bg-secondary';\n    }\n\n    /**\n     * Update circular chart with new asset percentages\n     * @param {Array} assets - Array of asset objects with percentages\n     */\n    updateCircularChart(assets) {\n        const chartSegment = document.querySelector('.chart-segment');\n        if (!chartSegment) return;\n\n        // Calculate cumulative percentages for conic-gradient\n        let cumulativePercentage = 0;\n        const gradientStops = assets.map(asset => {\n            const startAngle = cumulativePercentage * 3.6; // Convert percentage to degrees (360° = 100%)\n            cumulativePercentage += asset.percentage;\n            const endAngle = cumulativePercentage * 3.6;\n            \n            const color = this.getAssetColor(asset.name);\n            return `${color} ${startAngle}deg ${endAngle}deg`;\n        }).join(', ');\n\n        // Apply the conic gradient to the chart segment\n        chartSegment.style.background = `conic-gradient(${gradientStops})`;\n    }\n\n    /**\n     * Get hex color for asset in circular chart\n     * @param {string} assetName - Name of the asset\n     * @returns {string} Hex color code\n     */\n    getAssetColor(assetName) {\n        const colors = {\n            'USDT': '#D1F767',    // Green for USDT\n            'Bitcoin': '#E8A005', // Orange for Bitcoin\n            'ETH': '#FF5343',     // Red for Ethereum\n            'AVAX': '#627EEA'     // Blue for Avalanche\n        };\n        return colors[assetName] || '#6c757d'; // Default gray for unknown assets\n    }\n\n    /**\n     * Update chart images with wallet-specific chart URLs\n     * @param {Object} wallet - Wallet data object with chart URLs\n     */\n    updateChartImages(wallet) {\n        // Update portfolio change chart\n        const portfolioChart = document.querySelector('.chart-container img[alt=\"Portfolio Change Chart\"]');\n        if (portfolioChart) {\n            portfolioChart.src = wallet.portfolioChart;\n        }\n\n        // Update Sharpe ratio chart\n        const sharpeChart = document.querySelector('.chart-container img[alt=\"Sharpe Ratio Chart\"]');\n        if (sharpeChart) {\n            sharpeChart.src = wallet.sharpeChart;\n        }\n    }\n}\n","/**\n * Scroll Animations Manager\n * Handles scroll-based animations and smooth scrolling behavior\n * Uses Intersection Observer API for performance optimization\n */\n\nexport class ScrollAnimations {\n    constructor() {\n        this.init();\n    }\n\n    /**\n     * Initialize scroll animations\n     * Sets up intersection observer and smooth scrolling\n     */\n    init() {\n        this.setupIntersectionObserver();\n        this.setupSmoothScrolling();\n    }\n\n    /**\n     * Setup Intersection Observer for scroll animations\n     * Monitors elements entering viewport and triggers animations\n     */\n    setupIntersectionObserver() {\n        // Check if Intersection Observer is supported\n        if (!('IntersectionObserver' in window)) {\n            console.warn('IntersectionObserver not supported, falling back to scroll events');\n            this.setupScrollFallback();\n            return;\n        }\n\n        // Create intersection observer with options\n        const observerOptions = {\n            root: null, // Use viewport as root\n            rootMargin: '0px 0px -50px 0px', // Trigger when element is 50px from bottom of viewport\n            threshold: 0.1 // Trigger when 10% of element is visible\n        };\n\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    // Add show class when element enters viewport\n                    entry.target.classList.add('scroll-show');\n                    entry.target.classList.remove('scroll-hidden');\n                } else {\n                    // Optionally hide element when it leaves viewport\n                    // entry.target.classList.add('scroll-hidden');\n                    // entry.target.classList.remove('scroll-show');\n                }\n            });\n        }, observerOptions);\n\n        // Observe all elements with scroll-hidden class\n        const hiddenElements = document.querySelectorAll('.scroll-hidden');\n        hiddenElements.forEach(element => {\n            observer.observe(element);\n        });\n    }\n\n    /**\n     * Setup smooth scrolling for anchor links\n     * Handles smooth scrolling behavior for internal navigation\n     */\n    setupSmoothScrolling() {\n        // Find all anchor links that point to elements on the same page\n        const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n        \n        anchorLinks.forEach(link => {\n            link.addEventListener('click', (e) => {\n                const href = link.getAttribute('href');\n                \n                // Skip if href is just \"#\"\n                if (href === '#') return;\n                \n                const targetElement = document.querySelector(href);\n                \n                if (targetElement) {\n                    e.preventDefault();\n                    \n                    // Calculate offset for fixed header (if any)\n                    const headerOffset = 80; // Adjust based on your header height\n                    const elementPosition = targetElement.getBoundingClientRect().top;\n                    const offsetPosition = elementPosition + window.pageYOffset - headerOffset;\n                    \n                    // Smooth scroll to target\n                    window.scrollTo({\n                        top: offsetPosition,\n                        behavior: 'smooth'\n                    });\n                }\n            });\n        });\n    }\n\n    /**\n     * Fallback for browsers without Intersection Observer\n     * Uses scroll event listener (less performant but more compatible)\n     */\n    setupScrollFallback() {\n        let ticking = false;\n\n        const updateScrollAnimations = () => {\n            const hiddenElements = document.querySelectorAll('.scroll-hidden');\n            \n            hiddenElements.forEach(element => {\n                const elementTop = element.getBoundingClientRect().top;\n                const elementVisible = 150; // Trigger when element is 150px from top of viewport\n                \n                if (elementTop < window.innerHeight - elementVisible) {\n                    element.classList.add('scroll-show');\n                    element.classList.remove('scroll-hidden');\n                }\n            });\n            \n            ticking = false;\n        };\n\n        const requestTick = () => {\n            if (!ticking) {\n                requestAnimationFrame(updateScrollAnimations);\n                ticking = true;\n            }\n        };\n\n        // Throttled scroll event listener\n        window.addEventListener('scroll', requestTick);\n        \n        // Initial check\n        updateScrollAnimations();\n    }\n\n    /**\n     * Manually trigger scroll animation for specific element\n     * @param {string} selector - CSS selector for the element\n     */\n    triggerAnimation(selector) {\n        const element = document.querySelector(selector);\n        if (element) {\n            element.classList.add('scroll-show');\n            element.classList.remove('scroll-hidden');\n        }\n    }\n\n    /**\n     * Reset scroll animation for specific element\n     * @param {string} selector - CSS selector for the element\n     */\n    resetAnimation(selector) {\n        const element = document.querySelector(selector);\n        if (element) {\n            element.classList.add('scroll-hidden');\n            element.classList.remove('scroll-show');\n        }\n    }\n}\n","\n        // Import and initialize when DOM is ready\n        import { PortfolioManager } from './js/portfolio.js';\n        import { ScrollAnimations } from './js/scroll.js';\n        \n        document.addEventListener('DOMContentLoaded', () => {\n            new PortfolioManager();\n            new ScrollAnimations();\n        });\n    "],"names":["PortfolioManager","error","retries","i","response","resolve","walletButtonsContainer","fragment","wallet","button","walletId","w","activeId","isActive","selector","value","element","yearlyReturn","chartSubtitle","assets","assetsContainer","asset","assetItem","assetIcon","iconElement","assetName","chartSegment","cumulativePercentage","gradientStops","startAngle","endAngle","portfolioChart","sharpeChart","ScrollAnimations","observerOptions","observer","entries","entry","link","e","href","targetElement","offsetPosition","ticking","updateScrollAnimations","requestTick"],"mappings":"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"}